services:
    gateway:
        container_name: gateway
        build:
            context: ./gateway
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        environment:
            NODE_ENV: development
            GATEWAY_PORT: 3000
        depends_on:
            - user-service
            - auth-service
        volumes:
            - ./gateway:/app
            - /app/node_modules
        networks:
            - app-network

    user-service:
        container_name: user-service
        build:
            context: ./user-service
            dockerfile: Dockerfile
        ports:
            - "3001:3000"
        depends_on:
            - users_db
            - rabbitmq
        environment:
            NODE_ENV: development
            DATABASE_URL: ${USERS_DB_URL}
            RABBITMQ_URL: ${RABBITMQ_URL}
        volumes:
            - ./user-service:/app
            - /app/node_modules
        networks:
            - app-network

    auth-service:
        container_name: auth-service
        build:
            context: ./auth-service
            dockerfile: Dockerfile
        ports:
            - "3002:3000"
        depends_on:
            - rabbitmq
        environment:
            NODE_ENV: development
            DATABASE_URL: ${AUTH_DB_URL}
            RABBITMQ_URL: ${RABBITMQ_URL}
        volumes:
            - ./auth-service:/app
            - /app/node_modules
        networks:
            - app-network

    event-service:
        container_name: event-service
        build:
            context: ./event-service
            dockerfile: Dockerfile
        ports:
            - "3003:3000"
        depends_on:
            - rabbitmq
        environment:
            NODE_ENV: development
            DATABASE_URL: ${EVENT_DB_URL}
            RABBITMQ_URL: ${RABBITMQ_URL}
        volumes:
            - ./event-service:/app
            - /app/node_modules
        networks:
            - app-network

    users_db:
        container_name: users_db
        image: mysql:8.0
        restart: always
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${USERS_DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${USERS_DB_NAME}
            MYSQL_USER: ${USERS_DB_USER}
            MYSQL_PASSWORD: ${USERS_DB_PASSWORD}
        networks:
            - app-network

    auth_db:
        container_name: auth_db
        image: mysql:8.0
        restart: always
        ports:
            - "3307:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${AUTH_DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${AUTH_DB_NAME}
            MYSQL_USER: ${AUTH_DB_USER}
            MYSQL_PASSWORD: ${AUTH_DB_PASSWORD}
        networks:
            - app-network

    event_db:
        container_name: event_db
        image: mysql:8.0
        restart: always
        ports:
            - "3308:3306"
        environment:
            MYSQL_ROOT_PASSWORD: $EVENT_DB_ROOT_PASSWORD}
            MYSQL_DATABASE: $EVENT_DB_NAME}
            MYSQL_USER: $EVENT_DB_USER}
            MYSQL_PASSWORD: $EVENT_DB_PASSWORD}
        networks:
            - app-network

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
